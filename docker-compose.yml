services:

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      timeout: 10s
      retries: 10
    networks:
      - study-group

  rabbit:
    image: rabbitmq:4.0-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 5s
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - study-group

  database-accounts:
    image: mysql
    container_name: accountsdb
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accounts
    networks:
      - study-group

  config-service:
    build:
      context: ./../config-server
    #    image: "joaovitormoraveis/study-microservice-accounts:0.0.1"
    container_name: config-service-ms
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8071:8071"
    depends_on:
      - rabbit
    extends:
      file: common-config.yml
      service: microservice-base-config

  eureka-server:
    build:
      context: ./../eurekaserver
    #    image: "joaovitormoraveis/study-microservice-accounts:0.0.1"
    container_name: eurekaserver-ms
    deploy:
      resources:
        limits:
          memory: 700m
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8070:8070"
    depends_on:
      config-service:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"
      SPRING_PROFILES_ACTIVE: default
      SPRING_CONFIG_IMPORT: configserver:http://config-service:8071/
    networks:
      - study-group

  accounts:
    build:
      context: .
    #    image: "joaovitormoraveis/study-microservice-accounts:0.0.1"
    container_name: accounts-ms
    environment:
      SPRING_APPLICATION_NAME: accounts
      SPRING_DATASOURCE_URL: jdbc:mysql://database-accounts:3306/accounts
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8070/eureka/
    ports:
      - "8080:8080"
    depends_on:
      config-service:
        condition: service_healthy
      database-accounts:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  loans:
    build:
      context: ./../loans
    #    image: "joaovitormoraveis/study-microservice-loans:0.0.1"
    container_name: loans-ms
    environment:
      SPRING_APPLICATION_NAME: loans
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8070/eureka/
    ports:
      - "8081:8081"
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  cards:
    build:
      context: ./../cards
    #    image: "joaovitormoraveis/study-microservice-cards:0.0.1"
    container_name: cards-ms
    environment:
      SPRING_APPLICATION_NAME: "cards"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8070/eureka/
    ports:
      - "8082:8082"
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  gateway:
    build:
      context: ./../gateway-server
    #    image: "joaovitormoraveis/study-microservice-cards:0.0.1"
    container_name: gateway-server
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8070/eureka/
      SPRING_DATA_REDIS_CONNECT-TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
    ports:
      - "8072:8072"
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      redis:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

networks:
  study-group:
    driver: "bridge"
